{"version":3,"sources":["komponentor.js"],"names":["$","ERRORS","log","args","komponentor","options","debug","console","async","Komponent","kmp","ready","$el","loading","find","subject","this","addListener","event","listener","listeners","push","Object","assign","data","overlay","html","addClass","css","border","background","position","zIndex","textAlign","clone","width","height","insertBefore","overlayParent","parent","length","tagName","source","fetchKomponent","bind","init_result","renderKomponent","remove","bindKomponent","k","error","url","dummy","appendTo","append","each","_","item","initFunc","$renderedKomponent","children","content","init_komponent","replace","replaceWith","empty","setTimeout","prev","attr","forEach","e","autoload","el","komponent","Error","response","fetch","ok","reason","status","statusText","request","text","window","components","path","fn","opts","tmp","split","shift","para","String","prototype","hashCode","i","chr","hash","charCodeAt","Math","abs","intent","init_data","obj","val","send","sendIntent","then","c","hasOwnProperty","exec","catch","v","finally","$overlay","loadKomponents","container","jQuery"],"mappings":"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","file":"komponentor.min.js","sourcesContent":["/**\n * Komponentor - A jQuery-based component loading system\n * @module komponentor\n */\n\n(function ($) {\n    const ERRORS = {\n        NO_URL: 'No URL provided',\n        AJAX_FAIL: 'Failed to initiate component due to failed ajax request',\n        LOAD_FAIL: 'Failed to load Komponent'\n    }; \n    \n    // Add logging function near the top of the module\n    const log = (...args) => {\n        if (komponentor.options.debug) {\n            console.log('[Komponentor]', ...args);\n        }\n    };\n    \n    const DEFAULT_OVERLAY_HTML = `\n        <div style='position: absolute; top:50%; transform: translate(-50%, -50%); left:50%'>\n            Se incarca\n        </div>\n    `;\n    const createOverlay = () => {\n        return $(\"<div>\")\n            .html(DEFAULT_OVERLAY_HTML)\n            .addClass(\"komponent-overlay\")\n            .css({\n                border: 'dashed 1px silver',\n                background: '#eee',\n                position: 'absolute',\n                zIndex: 1000000,\n                textAlign: 'center'\n            });\n    };\n\n    window.komponentor = {\n        components: {},\n        path: null,\n        options: {\n            debug: true\n        }\n    };\n\n    /**\n     *\n     * @param opts\n     * @returns {Promise<unknown>}\n     */\n    $.fn.komponent = function (opts) {\n\n        if(typeof opts===\"undefined\") {\n            opts = {};\n        }\n        if(typeof opts===\"string\") {\n            opts = {url:opts};\n        }\n\n\n        let options = this.data();\n        if(typeof options===\"undefined\") {\n            options = {};\n        }\n        Object.assign(options,opts);\n        options.$el = this;\n        if(!options.url)\n            console.log(\"options.url\",options);\n\n\n        options.data = typeof opts.data===\"undefined\" ? {} : opts.data;\n        let tmp = options.url.split(\"|\");\n        options.url = tmp.shift();\n\n        tmp.forEach((para)=>{\n            let tmp = para.split(\"=\");\n            options.data[tmp[0]] = typeof tmp[1] ===\"undefined\" ? null :  tmp[1];\n        });\n\n        try {\n            return Komponent(options);\n            \n        } catch (error) {\n            log(\"Failed to load Komponent: \",error);\n            options.$el.html(\"<div>Failed to load Komponent <b>\"+ options.url + \"</b></div>\");\n            return;\n        }\n\n    };\n\n    /**\n     * @param options\n     * @returns {Promise<unknown>}\n     * @constructor\n     */\n    async function Komponent(options) {\n        const kmp = {\n            ready: false,\n            $el: null,\n            loading: ()=>{},\n            find: function (subject){\n                return this.$el.find(subject);\n            },\n            addListener: function (event,listener) {\n                this.listeners[event].push(listener);\n            },\n            listeners:{ready:[]}\n        };\n\n        delete options[\"komponent\"];\n\n        Object.assign(kmp,options);\n\n        if(kmp.$el && kmp.$el.data(\"komponent\")) {\n            return options.$el.data(\"komponent\");\n        }\n\n        const overlay = createOverlay().clone().width($(kmp.$el).width()).height($(kmp.$el).height()).insertBefore(kmp.$el);\n        const overlayParent = overlay.parent()\n        if(overlayParent.length && overlayParent[0].tagName===\"BODY\") {\n            overlay.css(\"width\",\"100%\").css(\"height\",\"100%\")\n        }\n\n        try {\n            const source = await fetchKomponent(kmp);\n\n            try {\n                if(!options.bind || !$(options.bind).data(\"komponent\")) {\n                    log(\"renderKomponent no bind\",kmp);\n                    kmp.init_result = renderKomponent(kmp,source);\n                    overlay.remove();\n                    return kmp;\n                }\n\n                const bindKomponent = $(options.bind).data(\"komponent\");\n                if(bindKomponent.ready) {\n                    log(\"renderKomponent bind ready\",kmp);\n                    kmp.data = bindKomponent;\n                    kmp.init_result = renderKomponent(kmp,source);\n                    overlay.remove();\n                    return kmp;\n                }\n                log(\"Add listener to\",bindKomponent);\n                \n                kmp.loading();\n                bindKomponent.addListener(\"ready\",(k)=>{\n                    log(\"renderKomponent on bind ready\",kmp);\n                    options.data = k;\n                    Object.assign(kmp,options);\n                    kmp.init_result = renderKomponent(kmp,source);\n                    overlay.remove();\n                    log(\"Component loaded\",kmp);\n                });\n            \n    \n                return kmp;\n            } catch (error) {\n                kmp.init_result = renderKomponent(kmp,source);\n                overlay.remove();\n                console.error(\"Error in Komponent\",error);\n            }\n        } catch (error) {\n            overlay.remove();\n            kmp.$el.html(\"Could not load component \"+kmp.url);\n            log(\"Error in Komponent\",error);\n            // throw(error);\n            return kmp;\n        }\n        \n    \n\n\n    }\n\n    String.prototype.hashCode = function()\n    {\n        let hash = 0, i, chr;\n        if (this.length === 0) return hash;\n        for (i = 0; i < this.length; i++) {\n            chr   = this.charCodeAt(i);\n            hash  = ((hash << 5) - hash) + chr;\n            hash |= 0; // Convert to 32bit integer\n        }\n        return Math.abs(hash);\n    };\n\n    /**\n     *\n     * @param k\n     * @param html\n     */\n    async function renderKomponent(k,html) {\n        \n        let dummy = $(\"<div>\").appendTo(\"body\").append(html);\n        dummy.find(\"script\").each((_,item)=>{\n            $(item).remove();\n        });\n        let $renderedKomponent = dummy.children().remove();\n        dummy.remove();\n\n        console.log($renderedKomponent,$renderedKomponent[0].tagName,$renderedKomponent.children());\n        if($renderedKomponent[0].tagName===\"TEMPLATE\") {\n            $renderedKomponent = $($renderedKomponent[0].content);\n        }\n        \n        \n        \n\n        let initFunc;\n\n        if(typeof init_komponent===\"function\") {\n            initFunc = init_komponent.bind(k);\n            init_komponent=null;\n            delete init_komponent;\n        } else {\n            initFunc = async function() {};\n        }\n\n        if(k.$el && $renderedKomponent.length) {\n            if(k.replace) {\n                // let id = k.$el.attr(\"id\");\n                k.$el.replaceWith($renderedKomponent);\n                k.$el = $renderedKomponent;\n                // k.$el.attr(\"id\",id);\n\n            }\n            else {\n                k.$el.empty().append($renderedKomponent);\n            }\n        }\n\n        if(!k.$el) {\n            k.$el = $renderedKomponent;\n        }\n\n        setTimeout(()=>k.$el.prev(\".komponent-overlay\").remove(),100);\n\n\n     \n\n        k.$el.data(\"komponent\",k)\n            .attr(\"is\",\"komponent\")\n            .find(\"*\").data(\"komponent\",k);\n\n\n\n        try {   \n            await initFunc(k,(k.data?k.data:null));\n            k.listeners.ready.forEach(listener => listener(k));\n            k.ready = true;\n        } catch (e) {\n            console.error(\"Error in initKomponent\",e);\n        }\n\n        if(typeof k.autoload==\"undefined\" || k.autoload) {\n\n            k.find(\"[is=komponent]\").each((_,el)=>$(el).komponent());\n            k.find(\"komponent\").each((_,el)=>$(el).komponent());\n        }\n    }\n\n    /**\n     *\n     * @returns {Promise<unknown>}\n     * @param opts\n     */\n    async function fetchKomponent(options) {\n        if (!options.url) {\n            throw new Error(ERRORS.NO_URL);\n        }\n        try {\n            const response = await fetch(options.url);\n            if (!response.ok) {\n                throw {\n                    reason: ERRORS.AJAX_FAIL,\n                    status: response.status,\n                    statusText: response.statusText,\n                    request: options\n                };\n            }\n            return await response.text();\n        } catch (error) {\n            throw {\n                reason: ERRORS.AJAX_FAIL,\n                error,\n                request: options\n            };\n        }\n    };\n\n    /**\n     *\n     * @param container\n     * @returns {Promise<unknown[]>}\n     */\n    async function loadKomponents(container) {\n        $(container).find(\"[is=komponent]\").each(async function () {\n            await $(this).komponent();\n        });\n\n    }\n\n\n    /**\n     *\n     * @param url\n     * @param url\n     * @returns {{data: data, options: (function(*): obj), send: (function(): Promise<unknown>), url: (function(*): obj)}}\n     */\n    window.komponentor.intent = function (url) {\n\n        let init_data = {data:{}};\n        let _data = {};\n\n        let obj = {\n            url: function(url) {\n                init_data.url = url;\n                return this;\n            },\n            data: function (attr,val) {\n                if(typeof attr===\"object\") {\n                    Object.assign(init_data.data,attr);\n                    return this;\n                }\n                init_data.data[attr] = val;\n                return this;\n            },\n            send: function (data) {\n                if(data) {\n                    obj.data(data);\n                }\n                // add overlay\n                try {\n                    return Komponent(init_data);\n                } catch (error) {\n                    console.error(\"Error in Komponent\",error);\n                }\n            }\n        };\n\n        if(url) {\n            obj.url(url);\n        }\n\n        return  obj;\n    };\n\n    komponentor.sendIntent = function(options) {\n\n        fetchKomponent(options)\n            .then(  function (c) {\n                if(!c)\n                    return;\n                if(c.hasOwnProperty(\"exec\"))\n                    c.exec(options.data);\n            })\n            .catch(function (v) {\n                console.log(\"could not load\",v,options);\n            })\n            .finally(()=>{\n                $overlay.remove();\n            });\n    };\n\n    komponentor.loadKomponents = function(container) {\n\n        return loadKomponents(container);\n    }\n\n    function cleanupKomponent(k) {\n        if (k.$el) {\n            k.$el.find('*').removeData('komponent');\n        }\n    }\n\n})(jQuery);\n"]}